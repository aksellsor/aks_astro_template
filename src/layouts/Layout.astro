---
import Darkmode from '@components/standard/Darkmode-wrapper.astro';
import AllHotkeys from '@components/standard/Hotkeys';
import TitleOnLeave from '@components/standard/TitleOnLeave.astro';
import HideUiOnScroll from '@components/standard/HideUiOnScroll.astro';
import Nav from '@components/standard/Nav.astro';
import Footer from '@components/standard/Footer.astro';
import Cultures from '@components/standard/Cultures.astro';
import BreadCrumbs from '@components/standard/BreadCrumbs.astro';
import SEO from '@components/standard/SEO.astro';

const { navProps, cultures, seoProps, id } = Astro.props;

const PUBLIC_LOCALES = import.meta.env.PUBLIC_LOCALES;
const PUBLIC_OTHER_LOCALES = import.meta.env.PUBLIC_OTHER_LOCALES;
const PUBLIC_DEFAULT_LOCALE = import.meta.env.PUBLIC_DEFAULT_LOCALE;
const PUBLIC_META_LOCALES = import.meta.env.PUBLIC_META_LOCALES;
const PUBLIC_SITE_URL = import.meta.env.PUBLIC_SITE_URL;
const PUBLIC_GITHUB_REPO = import.meta.env.PUBLIC_GITHUB_REPO;
const PUBLIC_UMBRACO_URL = import.meta.env.PUBLIC_UMBRACO_URL;
const PUBLIC_CLOUDFLARE_DASH = import.meta.env.PUBLIC_CLOUDFLARE_DASH;
const PUBLIC_UMBRACO_ROOT_NODE = import.meta.env.PUBLIC_UMBRACO_ROOT_NODE;
const PUBLIC_IMAGE_CDN = import.meta.env.PUBLIC_IMAGE_CDN;
---

<html lang='en'>
  <head>
    <meta charset='utf-8' />
    <SEO {...seoProps} />
    <style is:global>
      html {
        display: grid;
      }
      body {
        margin: 0;
        position: relative;
        display: grid;
        grid-template-rows: auto 1fr auto;
        font-family: system-ui, sans-serif;
        text-rendering: geometricPrecision;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
      html,
      body {
        min-height: 100%;
      }
      *,
      *::before,
      *::after {
        box-sizing: border-box;
      }
      html[data-theme='dark'] {
        background-color: #000;
        color: #fff;
      }
      a:hover {
        opacity: 0.8;
      }
      .container {
        max-width: 1000px;
        width: calc(100% - 3rem);
        margin-left: auto;
        margin-right: auto;
      }
      .header {
        gap: 1rem;
        display: flex;
        flex-direction: column;
        margin-top: 2rem;
      }
      .swup-progress-bar {
        height: 4px;
        background-color: #f44d42;
      }
      h1 {
        font-size: 2rem;
      }
    </style>
  </head>
  <body id='swup' data-page-id={id}>
    <AllHotkeys client:load />
    <TitleOnLeave titleOnLeave=':(' />
    <HideUiOnScroll />
    <Darkmode />
    <header class='container header'>
      <Nav {...navProps} />
      <BreadCrumbs />
      <Cultures {cultures} />
    </header>
    <main style='min-height:100%;display:grid;place-content:center;'>
      <pre>{JSON.stringify(
       { PUBLIC_LOCALES,
PUBLIC_OTHER_LOCALES,
PUBLIC_DEFAULT_LOCALE,
PUBLIC_META_LOCALES,
PUBLIC_SITE_URL,
PUBLIC_GITHUB_REPO,
PUBLIC_UMBRACO_URL,
PUBLIC_CLOUDFLARE_DASH,
PUBLIC_UMBRACO_ROOT_NODE,
PUBLIC_IMAGE_CDN}
        ,null,1)}</pre>
      <slot />
    </main>
    <Footer />

    <script>
      import Swup from 'swup';
      import SwupPreloadPlugin from '@swup/preload-plugin';
      import SwupHeadPlugin from '@swup/head-plugin';
      import SwupScriptsPlugin from '@swup/scripts-plugin';
      import SwupProgressPlugin from '@swup/progress-plugin';
      import SwupFormsPlugin from '@swup/forms-plugin';
      const linkInclude = [
        `a[href^="${window.location.origin}"]`,
        `a[href^="/"]`,
        `a[href^="#"]`,
      ];
      const linkExclude = [
        `a[href^="/media"]`,
        '[download]',
        '[target="_blank"]',
        '[data-no-swup]',
        `[href$=".pdf"]`,
      ];

      const exclude = linkExclude
        .map((selector) => `:not(${selector})`)
        .join('');
      const linkSelector = linkInclude
        .map((include) => `${include}${exclude}`)
        .join(',');
      var swup = new Swup({
        cache: true,
        linkSelector,
        animationSelector: false,
        plugins: [
          new SwupHeadPlugin(),
          new SwupScriptsPlugin(),
          new SwupPreloadPlugin(),
          new SwupProgressPlugin({
            className: 'swup-progress-bar',
            transition: 300,
            delay: 300,
            initialValue: 0.25,
            finishAnimation: true,
          }),
          new SwupFormsPlugin(),
        ],
      });
      window['swup'] = swup;
    </script>
  </body>
</html>
